{"ast":null,"code":"var _jsxFileName = \"/Users/kendallreid/mavsweb/mavsweb/src/pages/Dropdown.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst years = [\"2023\", \"2022\", \"2021\", \"2020\", \"2019\", \"2018\", \"2017\", \"2016\", \"2015\", \"2014\"];\nexport default function MultipleSelectPlaceholder() {\n  _s();\n  const [yearName, setYearName] = React.useState(['2023']); // Set default selection to 2023\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setYearName(\n    // On autofill we get a stringified value.\n    typeof value === \"string\" ? value.split(\",\") : value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: 300,\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        displayEmpty: true,\n        value: yearName,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => {\n          if (selected.length === 0) {\n            return /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 22\n            }, this);\n          }\n          return selected.join(\", \");\n        },\n        MenuProps: MenuProps,\n        inputProps: {\n          \"aria-label\": \"Without label\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          disabled: true,\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"Fiscal Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), years.map(year => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: year\n          //   style={getStyles(year, yearName, theme)}\n          ,\n          children: year\n        }, year, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(MultipleSelectPlaceholder, \"5dfaM5fe2TlYMBz4033qgSchkpE=\");\n_c = MultipleSelectPlaceholder;\nvar _c;\n$RefreshReg$(_c, \"MultipleSelectPlaceholder\");","map":{"version":3,"names":["React","OutlinedInput","MenuItem","FormControl","Select","jsxDEV","_jsxDEV","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","years","MultipleSelectPlaceholder","_s","yearName","setYearName","useState","handleChange","event","target","value","split","children","sx","m","mt","displayEmpty","onChange","input","fileName","_jsxFileName","lineNumber","columnNumber","renderValue","selected","length","join","inputProps","disabled","map","year","_c","$RefreshReg$"],"sources":["/Users/kendallreid/mavsweb/mavsweb/src/pages/Dropdown.js"],"sourcesContent":["import React from 'react';\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nconst years = [\n  \"2023\",\n  \"2022\",\n  \"2021\",\n  \"2020\",\n  \"2019\",\n  \"2018\",\n  \"2017\",\n  \"2016\",\n  \"2015\",\n  \"2014\",\n];\n\n\nexport default function MultipleSelectPlaceholder() {\n  const [yearName, setYearName] = React.useState(['2023']); // Set default selection to 2023\n\n  const handleChange = (event) => {\n    const {\n      target: { value }\n    } = event;\n    setYearName(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300, mt: 3 }}>\n        <Select\n          displayEmpty\n          value={yearName}\n          onChange={handleChange}\n          input={<OutlinedInput />}\n          renderValue={(selected) => {\n            if (selected.length === 0) {\n              return <em>Year</em>;\n            }\n\n            return selected.join(\", \");\n          }}\n          MenuProps={MenuProps}\n          inputProps={{ \"aria-label\": \"Without label\" }}\n        >\n          <MenuItem disabled value=\"\">\n            <em>Fiscal Year</em>\n          </MenuItem>\n          {years.map((year) => (\n            <MenuItem\n              key={year}\n              value={year}\n            //   style={getStyles(year, yearName, theme)}\n            >\n              {year}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}